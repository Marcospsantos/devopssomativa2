name: Flask-ngrok-deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Test
      run: |
        pytest
        
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Build Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: your-docker-username/your-repo-name:latest
        
    - name: Start ngrok
      uses: w9jds/ngrok-action@v2
      with:
        authtoken: ${{ secrets.NGROK_AUTH_TOKEN }}
        region: us
        proto: http
        addr: 5000
        
    - name: Deploy to ngrok
      run: |
        curl --request POST --url https://api.ngrok.com/api/1/tunnels \
          --header 'Content-Type: application/json' \
          --data-binary '{"name":"flask-app","addr":"http://localhost:4040","proto":"http","bind_tls":false}' \
          --user ${{ secrets.NGROK_AUTH_TOKEN }}:
        
    - name: Deploy to Heroku
      uses: akhileshns/heroku-deploy@v3.12.12
      with:
        heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
        heroku_app_name: your-heroku-app-name
        heroku_email: your-heroku-email-address
        extra_args: '--docker-image your-docker-username/your-repo-name:latest'
